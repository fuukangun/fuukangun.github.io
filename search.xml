<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Solr学习:为Solr添加数据]]></title>
      <url>%2F2017%2F03%2F04%2FSolr%E5%AD%A6%E4%B9%A0-%E4%B8%BASolr%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%2F</url>
      <content type="text"><![CDATA[schema配置简介 为什么此处只做一个简介，而不是放一篇详解上来？因为本文主要讲解如何为Solr添加数据，对于schema配置的详解，不是重点。想要了解清楚的各位，可以自行查询，网上很多关于schema的详解。或者也可以直接参看相关的官方wiki：链接直达 把Solr的一个Core当作数据库的一张表，那么其schema就相当于这个表的表结构设计。（本人刚刚接触Solr，如果表述有误，欢迎指正）也就是说，在添加数据之前，我们得先设计好表结构。 那么，schema的配置文件在哪呢？其实就在solr_home/solr/fuukangun（此处是你的Core name）/conf下找到managed-schema（之前的版本是schema.xml文件）。 打开managed-schema文件，我们可以看到里面默认配置了很多filed，也就是说默认了很多字段。你可以将里面的filed全删除，配上你想要的字段。但是值得注意的是，类似version和root这种带下划线的字段，是系统保留字段，可以不删除，但建议你的数据库中，表字段不要类似命名。 由于已经有默认配置了，那么我在这里就直接用原本自带的部分字段好了。这里选用id，sku，name三个字段，将其他的field注释或删除。看这几个field名称，应该是用来存储商品信息的。 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;field name=&quot;id&quot; type=&quot;string&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;&lt;field name=&quot;sku&quot; type=&quot;string&quot; indexed=&quot;true&quot; stored=&quot;true&quot; omitNorms=&quot;true&quot;/&gt;&lt;field name=&quot;name&quot; type=&quot;string&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&gt;``` &gt;# 在Solr控制台添加数据1. 在Solr控制台选择核心以后，点击下方的Documents按钮。Solr上一条数据可以看成是一个Document。![Documents](https://olwqv7o0u.qnssl.com/image/documentsAdd.png)2. Document Type可以选择很多，我在这里选择了JSON。然后在下面填入JSON格式的数据，点击Submit Document。右下角显示Status: success就表示数据添加成功了。我们也可以在这里添加一个数组的对象，不一定要一个个添加。&gt;# 进行数据查询选择左边菜单栏里面的Query，点击最下面的Execute Query按钮就会在右边出现查询结果了。上面的q输入框内，就是输入查询条件的，* : * 就是检索所有条件的。比如我们这个索引只有三个字段：id，sku，name。我们根据name模糊查询的话，可以写成name:雀巢* 。*的作用，类似于MySQL中的%。当然，我们也可以精确查询。另外一些设置这里不在简述。![](https://olwqv7o0u.qnssl.com/image/query.png)### 问题出现：但是，在点击了Execute Query按钮之后，界面上并没有出现任何数据。于是通过调试，我在控制台发现了服务器400的错误。![](https://olwqv7o0u.qnssl.com/image/resultSolr.png)个人怀疑是Tomcat上解析URL出错了，我把URL复制下来，粘贴到浏览器的地址栏，把%2F修改为/。结果成功获得了刚刚添加过的数据。![](https://olwqv7o0u.qnssl.com/image/urlResult.png)### 解决方式：找到Tomcat/conf目录下的catalina.properties文件，在最下面添加如下代码：org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true重启Tomcat，就能使Tomcat正确解析出URL了。### 结果查看：然后我们再进一次Solr控制台，就能看到搜索结果了。![](https://olwqv7o0u.qnssl.com/image/fixResult.png)&gt;# 从数据库添加数据解决了上面的问题，我们继续来尝试一下如何从数据库导入数据到Solr。1. 首先在数据库建立相同格式的表，并在表里加几条数据。![](https://olwqv7o0u.qnssl.com/image/mysqlData.png)2. 要想Solr连接数据库，需要两个jar包： * mysql-connector-java-5.1.41-bin.jar（这个不需要多说，没有的可以自行下载） * solr-5.5.0/dist目录下，solr-dataimporthandler-5.5.0.jar 将这两个包，拷贝到Tomcat\webapps\solr\WEB-INF\lib目录下。3. 配置solr_home/solr/yourCore/conf目录下的solrconf.xml文件。在&lt;requestHandler name=&quot;/select&quot; class=&quot;solr.SearchHandler&quot;&gt;前面上加上一个dataimport的处理的Handler data-config.xml 123454. 在同目录下，创建data-config.xml文件 * dataSource是数据库数据源。 * Entity就是一张表对应的实体，pk是主键，query是查询语句。 * Field对应一个字段，column是数据库里的column名，后面的name属性对应着Solr的Filed的名字。 &lt;?xml version=”1.0” encoding=”UTF-8” ?&gt; ``` 重启Tomcat，在Solr控制台，选择Dataimport，点击Execute从MySQL导入数据。可能需要稍微等几秒，点击Refresh Status刷新倒入状态，出现下图，表示数据导入成功。 点击Query查询数据 但是原本我们通过控制台添加的数据消失了，这是因为我们在上一步点击Execute导入数据时，勾选了clean的缘故。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Solr学习:Core配置]]></title>
      <url>%2F2017%2F02%2F25%2FSolr%E5%AD%A6%E4%B9%A0-Core%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[前言 上回说到，如何搭建Solr5.5.0，进入Solr控制台。但是，可以看到，此时控制台左边Core选择栏，显示的是No cores available。也就是说，Solr从5.X开始就不提供默认的Core了，而需要我们自行配置。本文就讲述如何配置第一个Core。 配置年轻人的第一个Core 首先，进入你原来配置的solr_home/solr目录下，创建一个文件夹，命名成你的CoreName。比如我创建了fuukangunCore。 接着，将solr_home/configsets/sample_techproducts_configs下的conf文件夹拷贝到solr_home/solr/fuukangunCore文件夹里。 然后，启动Tomcat，进入Solr控制台，点击左边的No cores available，然后Add Core。在name和instanceDir中填入你的CoreName。比如笔者就要填入fuukangunCore。注：Solr Core的命名有一定规范，具体可自行百度 最后，原本的No cores available就变成了Core Selector，在此可以选择你的Core。你也可以创建更多的Core。现在，你的Core目录下，应该多了core.properties文件和data文件夹。data文件夹式用于存储索引文件的，而core.properties文件则存放了Core的一些配置信息。 但是虽然我们有了Core，依旧缺少核心的东西，就是数据。下一次，我将会介绍如何配置Core的schema和从MySQL导入数据。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Solr学习:Solr5.5.0搭建]]></title>
      <url>%2F2017%2F02%2F24%2FSolr%E5%AD%A6%E4%B9%A0-Solr5-5-0%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[前言 最近在工作上，由于DB使用了Cobar进行分库，所以表关联无法得以实现，需要在Solr上来进行一些复杂的查询。而且即便不进行分库，DB操作也不建议大数据量的多表进行关联查询，尤其是那种4、5张大表进行join的操作。然后顺带学习和了解一下Solr。 需要注意的是Solr6以上版本需要JDK8，Solr5以上版本需要JDK7。 Solr搭建 下载Solr 5.5.0，并解压到当前目录下。 下载Tomcat，此处我用的是Tomcat8.5.11。 将solr-5.5.0/server/solr-webapp下的webapp文件夹拷贝到Tomcat/webapps下，并将拷贝过来的webapp重命名成solr。（此处建议先把Tomcat/webapps下内容全部清空） 把solr-5.5.0/server/lib/ext中的jar包复制到Tomcat/webapps/solr/WEB-INF/lib目录中。 在任意位置新建solr_home文件夹，我建立在/Users/fuukangun路径下。把solr-5.5.0/server下的solr文件夹，拷贝到刚刚创建的solr_home文件夹下。solr_home就是之后创建索引实例Core的需要的目录 把solr-5.5.0/server/resources下的log4j.properties文件拷贝到Tomcat/webapps/solr/WEB-INF/classes目录下（classes不存在需要手动创建） 打开Tomcat/webapps/solr/WEB-INF下的web.xml文件。找到下面的配置内容，配置solr_home，一开始应该是被注释掉了。 12345&lt;env-entry&gt; &lt;env-entry-name&gt;solr/home&lt;/env-entry-name&gt; &lt;env-entry-value&gt;/put/your/solr/home/here&lt;/env-entry-value&gt; &lt;env-entry-type&gt;java.lang.String&lt;/env-entry-type&gt; &lt;/env-entry&gt; 将env-entry-value值替换为/Users/fuukangun/solr_home/solr，保存。 启动Tomcat，在浏览器输入http://localhost:8080/solr/index.html#/ 就能出现Solr控制台了。]]></content>
    </entry>

    
  
  
</search>
